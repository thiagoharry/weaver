<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Configuring Weaver Projects</title>
    <link rel="stylesheet" href="weaver.css">
  </head>
  <body>
    <header>
      <h1><a href="index.htm">Weaver: A Game Engine for GNU/Linux</a></h1>
      <span class="menu">
        <a href="documentation.htm">Documentation</a>
        <a href="tutorial.htm">Tutorial</a>
        <a href="examples.htm">Examples</a>
        <a href="download.htm">Download</a>
      </span>
    </header>
    <div class="docs">
      <h2>Configuring Weaver Projects</h2>
      <p>
        Inside the directory of every Weaver project there's the
        file <tt>conf/conf.h</tt>. That file is just a C header file
        and editing it you can change a lot of configurations of your
        game. This page lists all the different macros that can be
        defined to different values (or not be defined) and how it
        changes your game's behaviour.
      </p>
      <h3>Index</h3>
      <ol>
        <li><a href="#basic">Basic Macros</a></li>
        <ol>
          <li><a href="#W_DEBUG_LEVEL">W_DEBUG_LEVEL</a></li>
          <li><a href="#W_MULTITHREAD">W_MULTITHREAD</a></li>
          <li><a href="#W_SOURCE">W_SOURCE</a></li>
          <li><a href="#W_TARGET">W_TARGET</a></li>
        </ol>
        <li><a href="#security">Security Macros</a></li>
        <ol>
          <li><a href="#W_PREVENT_SELF_ENABLING_PLUGINS">
              W_PREVENT_SELF_LOADING_PLUGINS</a></li>          
        </ol>
        <li><a href="#limit">Macros About Weaver Limits</a></li>
        <ol>
          <li><a href="#W_INTERNAL_MEMORY">W_INTERNAL_MEMORY</a></li>
          <li><a href="#W_MAX_MEMORY">W_MAX_MEMORY</a></li>
          <li><a href="#W_MAX_SCHEDULING">W_MAX_SCHEDULING</a></li>
          <li><a href="#W_MAX_SUBLOOP">W_MAX_SUBLOOP</a></li>
          <li><a href="#W_WEB_MEMORY">W_WEB_MEMORY</a></li>
        </ol>
        <li><a href="#numeric">Macros About Numeric Functions</a></li>
        <ol>
          <li><a href="#W_SEED">W_SEED</a></li>
        </ol>
        <li><a href="#window">Macros About the Window</a></li>
        <ol>
          <li><a href="#W_DEFAULT_COLOR">W_DEFAULT_COLOR</a></li>
          <li><a href="#W_HEIGHT">W_HEIGHT</a></li>
          <li><a href="#W_WIDTH">W_WIDTH</a></li>
        </ol>
        <li><a href="#install">Macros about Directories and
        Installation</a></li>
        <ol>
          <li><a href="#W_INSTALL_DATA">W_INSTALL_DATA</a></li>
          <li><a href="#W_INSTALL_PROG">W_INSTALL_PROG</a></li>
          <li><a href="#W_PLUGIN_PATH">W_PLUGIN_PATH</a></li>
        </ol>
        <li><a href="#sound">Macros about Sound and Music</a></li>
        <ol>
          <li><a href="#W_DISABLE_MP3">W_DISABLE_MP3</a></li>
          <li><a href="#W_MAX_MUSIC">W_MAX_MUSIC</a></li>
        </ol>
      </ol>
      <h3 id="basic">Basic Macros</h3>
      <h4 id="W_DEBUG_LEVEL">W_DEBUG_LEVEL (0, 1, or 2)</h4>
      <p>
        This macro enables and disables debug messages in your game
        and also determines if your game is finished or still is in a
        development version.
      </p>
      <p>
        In a finished game, which is ready to be distributed, you
        should always set this macro to 0. You also needs to set this
        value to 0 if you wish to install the game with a <tt>make
        install</tt> command (don't forget to recompile it). When this
        macro is set to 0, a game run faster and without wasting
        memory in information for debug messages.
      </p>
      <p>
        If you set the macro to 1, the game will print messages warns
        you about non-fatal errors found during execution. If you set
        the macro to 2, warnings about strange conditions also will be
        print (but not always these warnings represent errors or
        things tht should be fixed). Values greater than 2 are
        reserved to Weaver engine development and should never be used
        in games.
      </p>
      <p>
        Of course, fatal errors always halts the game execution and
        makes some error message appear in the screen, even when this
        macro is set to 0.
      </p>
      <p>
        If this macro is not present, it's treated as if it's value is 0.
      </p>
      <h4 id="W_MULTITHREAD">W_MULTITHREAD (nothing)</h4>
      <p>
        This thread defines if the project should support multiple
        threads or not. If this macro is defined, all the functions
        marked as thread-safe in <a href="reference.htm">Weaver
        Reference Guide</a> becames thread-safe. If the macro is
        defined, all the functions that read game assets also try do
        do it's job asynchronously in a separated thread.
      </p>
      <p>
        If the macro isn't defined, then Weaver doesn't care about the
        possibility of multiple threads running the code and doesn't
        create mutexes and semaphores. All the functions became not
        thread-safe.
      </p>
      <p>
        As the web environment doesn't support threads, this macro is
        alway treated as not defined if you compile the game as a web
        page.
      </p>
      <h4 id="W_SOURCE">W_SOURCE (W_C or W_CPP)</h4>
      <p>
        This macros defines the language which we are using in aa
        project. There's two options: C (<tt>W_C</tt>) or C++
        (<tt>W_CPP</tt>).
      </p>
      <p>
        With the help of this macro, Weaver knows wich compiler should
        be used and also how the headers should be defined.
      </p>
      <p>
        If this macro isn't present, <tt>W_C</tt> is assumed, but a
        warning will be print during compilation.
      </p>
      <h4 id="W_TARGET">W_TARGET (W_ELF or W_WEB)</h4>
      <p>
        This macro defines the target for the compilation. If the game
        should be transformed in a Linux executable (<tt>W_ELF</tt>)
        or in a web page in the form of optimized javascript
        (<tt>W_WEB</tt>).
      </p>
      <p>
        If this macro isn't defined, <tt>W_ELF</tt> is assumed, but a
        warning will be print during compilation.
      </p>
      <h3 id="security">Security Macros</h3>
      <h4 id="W_PREVENT_SELF_ENABLING_PLUGINS">
        W_PREVENT_SELF_ENABLING_PLUGINS (nothing)
      </h4>
      <p>
        This macro prevents plugins from self-enabling
        themselves. They still are loaded in your game, and so still
        are able to run initialization code. They just can't be
        automatically enabled. Only you can enable them with
        <a href="reference.htm#enable_plugin">W.enable_plugin</a>.
      </p>
      <p>
        This macro won't protect a user if a malicious plugin is put
        in the
        directory <a href="#W_PLUGIN_PATH">W_PLUGIN_PATH</a>. Only
        trustable plugins should be put in that directory and the
        directory itself should be secure.
      </p>
      <h3 id="limit">Macros About Weaver Limits</h3>
      <h4 id="W_INTERNAL_MEMORY">W_INTERNAL_MEMORY (any positive
        integer)</h4>
      <p>
        The maximal memory that should be used by Weaver's internal
        operations. Probably it's value should be much smaller
        than <tt>W_MAX_MEMORY</tt>.
      </p>
      <p>
        Usually you should care about this value only if your game
        crashed with some message about not having enough internal
        memory. Sometimes if you need to read a very big shader, you
        need to increase the default value of this macro.
      </p>
      <p>
        If this macro is not defined, it's value is assumed to be
        1/10,000 of <tt>W_MAX_MEMORY</tt>, but not less than 16 KB.
      </p>
      <h4 id="W_MAX_MEMORY">W_MAX_MEMORY (any positive integer)</h4>
      <p>
        This macro sets the maximum memory that your game should use
        for game elements. The value is in bytes. 
      </p>
      <p>
        In fact, Weaver will probably choose a value bigger than what
        you define in this macro, as the memory manager expects that
        the limit is a multiple of the page size in your computer.
      </p>
      <p>
        Any memory allocation using Weaver functions will fail if you
        already are using all the reserved memory for your game. Even
        if the computer still have plenty of free memory in RAM.
      </p>
      <p>
        If this value is not defined, Weaver prints a warning during
        compilation and tries to use 1, reserving the minimum ammount
        of memory possible.
      </p>
      <h4 id="W_MAX_SCHEDULING">W_MAX_SCHEDULING (any positive
        integer)</h4>
      <p>
        Weaver can schedule the execution of functions without
        arguments and return values with functions like
        <a href="reference.htm#run_futurelly">W.run_futurelly</a> and
        <a href="reference.htm#run_periodically">W.run_periodically</a>. These
        functions put functions in the scheduler.
      </p>
      <p>
        This macro sets the maximum number of functions that Weaver
        can store in it's scheduler for each main loop.
      </p>
      <h4 id="W_MAX_SUBLOOP">W_MAX_SUBLOOP (any positive integer)</h4>
      <p>
        This macro defines the maximum size of the main loop
        stack. Each time you call the
        function <a href="reference.htm#Wsubloop">Wsubloop</a> without
        calling <a href="reference.htm#Wexit_loop">Wexit_loop</a>, you
        use one position in the stack.
      </p>
      <p>
        The correct value for this macro depends of your game
        structure and design. Please, check <a href="loop.htm">Weaver
        Main Loops</a> to understand better this macro.
      </p>
      <p>
        If this macro is not defined, 1 is assumed and a warning is
        print during compilation.
      </p>
      <h4 id="W_WEB_MEMORY">W_WEB_MEMORY (any positive integer)</h4>
      <p>
        This macro defines the additional memory that should be
        reserved if your game is being compiled using Emscripten. It's
        perfect value depends of the ammount of memory needed outside
        the Weaver memory manager. If your code and it's libraries use
        a lot of <tt>malloc</tt>s, it will need more memory for the
        web.
      </p>
      <p>
        You should care about changing this macro only if your game
        shows problems running out of memory in the web browser, where
        a error message will warn about not being able to enlarge
        memory arrays. If this happens, increase the value of this
        macro or try to use less <tt>malloc</tt>s.
      </p>
      <p>
        This macro must be present if you are compiling your game to a
        web browser and it's value should be at least 1MB.
      </p>
      <h3 id="numeric">Macros About Numeric Functions</h3>
      <h4 id="W_SEED">W_SEED (any integer)</h4>
      <p>
        If this macro is defined, it's used as a seed to initialize
        the pseudo-random number generator. If it's not defined, a
        value read from <tt>/dev/urandom</tt> or from the current time
        in milisseconds is used.
      </p>
      <h3 id="window">Macros About the Window</h3>
      <h4 id="W_DEFAULT_COLOR">W_DEFAULT_COLOR (foat, float, float)</h4>
      <p>
        This is your window color. When you have no objects in the
        screen, just your empty window, it has this color. If you want
        to define this macro, define it as three floating point
        numbers between 0 and 1 and separated by a comma. For example:
      </p>
      <pre class="codigo">
<span class="label">#define</span> W_DEFAULT_COLOR 1.0, 0.0, 0.0 <span class="comment">// Red</span></pre>
      <p>
        If this macro isn't defined, it's value is assumed to
        be <tt>0.0, 0.0, 0.0</tt> (black).
      </p>
      <h4 id="W_HEIGHT">W_HEIGHT (any non-negative integer)</h4>
      <p>
        This is the height in pixels that your game window should have
        when is created. If this macro is defined to 0 or is not
        present, Weaver will create the window with the biggest height
        possible. In a web browser this means create a canvas as big
        as the window.
      </p>
      <p>
        If both this macro and <a href="#W_WIDTH">W_WIDTH</a> aren't
        defined or are defined as 0, then Weaver will create it's
        window in fullscreen.
      </p>
      <p>
        Some window managers will ignore the size specification. But
        if you ask your window to be fullscreen, usually even the more
        problematic window managers will obey.
      </p>
      <h4 id="W_WIDTH">W_WIDTH (any non-negative integer)</h4>
      <p>
        This is the width in pixels that your game window should have
        when is created. If this macro is defined to 0 or is not
        defined, Weaver will create the window with the biggest width
        possible. In a web browser this means create a canvas as large
        as the window.
      </p>
      <p>
        If both this macro and <a href="#W_HEIGHT">W_HEIGHT</a> aren't
        defined or are defined as 0, then Weaver will create it's
        window in fullscreen.
      </p>
      <p>
        Some window managers will ignore the size specification. But
        if you ask your window to be fullscreen, usually even the more
        problematic window managers will obey.
      </p>
      <h3 id="install">Macros about Directories and Installation</h3>
      <h4 id="W_INSTALL_DATA">W_INSTALL_DATA (a string with a
      directory path)</h4>
      <p>
        This is where the game data shall be installed when someone
        uses the command <tt>make install</tt> in the game top
        directory.
      </p>
      <p>
        If you don't define this macro, it's value is assumed to be
        /usr/share/games/W_PROG, where W_PROG is your project name.
      </p>
      <h4 id="W_INSTALL_PROG">W_INSTALL_PROG (a string with a
      directory path)</h4>
      <p>
        This is the directory where your game executable shall be
        installed if someone uses the command <tt>make install</tt> at
        your game top directory.
      </p>
      <p>
        If this macro is not defined, it's assumed to be
        "/usr/games/".
      </p>
      <h4 id="W_PLUGIN_PATH">W_PLUGIN_PATH (a string with a directory
      path)</h4>
      <p>
        This is where your game should look for plugins. You can
        definee this macro as a string with different paths separated
        by a ":". For example:
        "/usr/share/games/my_game/plugin:~/.mygame/".
      </p>
      <p>
        If this macro is not set, it's assumed to be the
        "compiled_plugins" directory in your game top directory if you
        are still building the game (the macro
        <a href="#W_DEBUG_LEVEL">W_DEBUG_LEVEL</a> is not set to 0),
        or is set to a directory called "plugins"
        at <a href="#W_INSTALL_DATA">W_INSTAL_DATA</a> otherwise.
      </p>
      <h3 id="sound">Macros about Sound and Music</h3>
      <h4 id="W_DISABLE_MP3">W_DISABLE_MP3 (none)</h4>
      <p>
        You should set this macro if you don't want to use MP3 and
        don't have the library MPG123 installed.
      </p>
      <h4 id="W_MAX_MUSIC">W_MAX_MUSIC (a non-negative integer)</h4>
      <p>
        This macro is the maximum number of music that is played at
        same time in your game. The default value is 1. You should set
        a greater value if you are composing an ambient sound with
        various sound files, each with its own volume or if you want
        some audio like a character monologue to play at same time
        than a theme music.
      </p>
    </div>
  </body>
</html>
